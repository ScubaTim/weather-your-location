{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/weather-your-location/src/components/App/index.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport { Row, Col } from 'reactstrap';\nimport WeatherDisplay from '../WeatherDisplay';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      lon: null\n    };\n\n    this.getWeather = async () => {\n      const response = await fetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&appid=fdca481f9e858844aede00aa6a7749c2`).catch(err => console.log(err));\n      const weather = response.json();\n      console.log(weather.coord);\n    };\n\n    this.renderContent = () => {\n      if (this.state.lon && this.state.lat) {\n        this.getWeather();\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(WeatherDisplay, {\n          lat: this.state.lat,\n          lon: this.state.lon,\n          handleClick: this.handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }\n        }))));\n      } else {\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }\n        }, \"Acquiring Device Coordinates\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude,\n      lon: position.coords.longitude\n    }));\n  }\n\n  render() {\n    return this.renderContent();\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/weather-your-location/src/components/App/index.js"],"names":["React","Component","Row","Col","WeatherDisplay","App","state","lat","lon","getWeather","response","fetch","catch","err","console","log","weather","json","coord","renderContent","handleClick","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBK,KADwB,GAChB;AACJC,MAAAA,GAAG,EAAE,IADD;AAEJC,MAAAA,GAAG,EAAE;AAFD,KADgB;;AAAA,SAYxBC,UAZwB,GAYX,YAAY;AACrB,YAAMC,QAAQ,GAAI,MAAMC,KAAK,CAAE,0FAAyF,KAAKL,KAAL,CAAWC,GAAI,QAAO,KAAKD,KAAL,CAAWE,GAAI,yCAAhI,CAAL,CAA+KI,KAA/K,CAAqLC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAA5L,CAAxB;AACA,YAAMG,OAAO,GAAGN,QAAQ,CAACO,IAAT,EAAhB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACE,KAApB;AACH,KAhBuB;;AAAA,SAkBxBC,aAlBwB,GAkBR,MAAM;AAClB,UAAI,KAAKb,KAAL,CAAWE,GAAX,IAAkB,KAAKF,KAAL,CAAWC,GAAjC,EAAsC;AAClC,aAAKE,UAAL;AACA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,cAAD;AACI,UAAA,GAAG,EAAE,KAAKH,KAAL,CAAWC,GADpB;AAEI,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,GAFpB;AAGI,UAAA,WAAW,EAAE,KAAKY,WAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,CADJ,CADJ;AAaH,OAfD,MAeO;AACH,4BAAQ;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAR;AACH;AACJ,KArCuB;AAAA;;AAMxBC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACIC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAEpB,MAAAA,GAAG,EAAEmB,QAAQ,CAACE,MAAT,CAAgBC,QAAvB;AAAiCrB,MAAAA,GAAG,EAAEkB,QAAQ,CAACE,MAAT,CAAgBE;AAAtD,KAAd,CADhB;AAGH;;AA6BDC,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKZ,aAAL,EAAP;AACH;;AAzCuB;;AA0C3B;AAED,eAAed,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport { Row, Col } from 'reactstrap';\nimport WeatherDisplay from '../WeatherDisplay';\n\nclass App extends Component {\n    state = {\n        lat: null,\n        lon: null,\n    }\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({ lat: position.coords.latitude, lon: position.coords.longitude }),\n        );\n    }\n\n    getWeather = async () => {\n        const response = (await fetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&appid=fdca481f9e858844aede00aa6a7749c2`).catch(err => console.log(err)));\n        const weather = response.json()\n        console.log(weather.coord);\n    }\n\n    renderContent = () => {\n        if (this.state.lon && this.state.lat) {\n            this.getWeather();\n            return (\n                <div>\n                    <Row>\n                        <Col>\n                            <WeatherDisplay\n                                lat={this.state.lat}\n                                lon={this.state.lon}\n                                handleClick={this.handleClick}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n            )\n        } else {\n            return (<h1 className=\"text-center\">Acquiring Device Coordinates</h1>)\n        }\n    }\n\n    render() {\n        return this.renderContent();\n    }\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
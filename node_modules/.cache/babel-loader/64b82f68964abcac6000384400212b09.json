{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/weather-your-location/src/components/App/index.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport { Row, Col } from 'reactstrap';\nimport LandingButton from '../LandingButton';\nimport WeatherDisplay from '../WeatherDisplay';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      lon: null,\n      temp: null,\n      highTemp: null,\n      lowTemp: null,\n      humidity: ''\n    };\n\n    this.getWeather = async () => {\n      if (this.state.lat) {\n        const response = await fetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&appid=0317b02bce728aa1f3b87d5d6ad88a5d`).catch(err => console.log(err));\n        const weather = await response.json();\n        console.log(weather);\n        const tempInF = Math.floor(weather.main.temp * 9 / 5 - 459.67);\n        const maxInF = Math.floor(weather.main.temp_max * 9 / 5 - 459.67);\n        const minInF = Math.floor(weather.main.temp_min * 9 / 5 - 459.67);\n        const humidity = Math.floor(weather.main.humidity);\n        const message = weather.weather.console.log(message);\n        this.setState({\n          temp: tempInF,\n          highTemp: maxInF,\n          lowTemp: minInF,\n          humidity: humidity\n        });\n      }\n    };\n\n    this.handleLaunch = () => {\n      this.getWeather();\n    };\n\n    this.renderContent = () => {\n      if (!this.state.temp) return /*#__PURE__*/React.createElement(Row, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(LandingButton, {\n        handleLaunch: this.handleLaunch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      })));\n\n      if (!this.state.lat) {\n        return /*#__PURE__*/React.createElement(Row, {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          style: {\n            marginTop: '25vh'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }\n        }, \"Loading...\")));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(WeatherDisplay, {\n        lat: this.state.lat,\n        lon: this.state.lon,\n        temp: this.state.temp,\n        highTemp: this.state.highTemp,\n        lowTemp: this.state.lowTemp,\n        humidity: this.state.humidity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }))));\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude,\n      lon: position.coords.longitude\n    }));\n  }\n\n  render() {\n    return this.renderContent();\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/weather-your-location/src/components/App/index.js"],"names":["React","Component","Row","Col","LandingButton","WeatherDisplay","App","state","lat","lon","temp","highTemp","lowTemp","humidity","getWeather","response","fetch","catch","err","console","log","weather","json","tempInF","Math","floor","main","maxInF","temp_max","minInF","temp_min","message","setState","handleLaunch","renderContent","marginTop","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport { Row, Col } from 'reactstrap';\nimport LandingButton from '../LandingButton';\nimport WeatherDisplay from '../WeatherDisplay';\n\nclass App extends Component {\n    state = {\n        lat: null,\n        lon: null,\n        temp: null,\n        highTemp: null,\n        lowTemp: null,\n        humidity: ''\n    }\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({ lat: position.coords.latitude, lon: position.coords.longitude }),\n        );\n    }\n\n    getWeather = async () => {\n        if (this.state.lat) {\n            const response = await fetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&appid=0317b02bce728aa1f3b87d5d6ad88a5d`).catch(err => console.log(err));\n            const weather = await response.json()\n            console.log(weather);\n            const tempInF = Math.floor(weather.main.temp * 9 / 5 - 459.67);\n            const maxInF = Math.floor(weather.main.temp_max * 9 / 5 - 459.67);\n            const minInF = Math.floor(weather.main.temp_min * 9 / 5 - 459.67);\n            const humidity = Math.floor(weather.main.humidity)\n            const message = weather.weather.\n                console.log(message);\n            this.setState({ temp: tempInF, highTemp: maxInF, lowTemp: minInF, humidity: humidity })\n        }\n    }\n\n    handleLaunch = () => {\n        this.getWeather();\n    }\n\n    renderContent = () => {\n        if (!this.state.temp)\n            return (\n                <Row className=\"text-center\">\n                    <Col>\n                        <LandingButton\n                            handleLaunch={this.handleLaunch}\n                        />\n                    </Col>\n                </Row>\n            );\n\n        if (!this.state.lat) {\n            return (\n                <Row className=\"text-center\">\n                    <Col>\n                        <h1 style={{ marginTop: '25vh' }}>Loading...</h1>\n                    </Col>\n                </Row>\n            )\n        }\n\n        return (\n            <div>\n                <Row>\n                    <Col>\n                        <WeatherDisplay\n                            lat={this.state.lat}\n                            lon={this.state.lon}\n                            temp={this.state.temp}\n                            highTemp={this.state.highTemp}\n                            lowTemp={this.state.lowTemp}\n                            humidity={this.state.humidity}\n                        />\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n    render() {\n        return this.renderContent();\n    }\n};\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}
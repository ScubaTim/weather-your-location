{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/weather-your-location/src/components/App/index.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport { Row, Col } from 'reactstrap';\nimport WeatherDisplay from '../WeatherDisplay';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      lon: null,\n      temp: null,\n      highTemp: null,\n      lowTemp: null,\n      percip: null\n    };\n\n    this.renderContent = () => {\n      if (this.state.lon && this.state.lat) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(WeatherDisplay, {\n          lat: this.state.lat,\n          lon: this.state.lon,\n          temp: this.state.temp,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }\n        }))));\n      } else {\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }\n        }, \"Acquiring Device Coordinates\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude,\n      lon: position.coords.longitude\n    }));\n\n    const getWeather = async () => {\n      //Get Weather data from API with coordinates from state\n      const response = await fetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&appid=fdca481f9e858844aede00aa6a7749c2`).catch(err => console.log(err));\n      const weather = await response.json(); //Set Current Tempurature\n      // weather.main.temp is the current tempurature in Kelvin, convert it to Farenheit\n\n      const tempInF = Math.round(weather.main.temp * 9 / 5 - 459.67); //Update the state with current Tempurature in F\n\n      return this.setState({\n        temp: tempInF\n      });\n    };\n\n    getWeather();\n  }\n\n  render() {\n    //Why the fuck does this constantly run\n    console.log(this.state.temp);\n    return this.renderContent();\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/weather-your-location/src/components/App/index.js"],"names":["React","Component","Row","Col","WeatherDisplay","App","state","lat","lon","temp","highTemp","lowTemp","percip","renderContent","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","getWeather","response","fetch","catch","err","console","log","weather","json","tempInF","Math","round","main","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBK,KADwB,GAChB;AACJC,MAAAA,GAAG,EAAE,IADD;AAEJC,MAAAA,GAAG,EAAE,IAFD;AAGJC,MAAAA,IAAI,EAAE,IAHF;AAIJC,MAAAA,QAAQ,EAAE,IAJN;AAKJC,MAAAA,OAAO,EAAE,IALL;AAMJC,MAAAA,MAAM,EAAE;AANJ,KADgB;;AAAA,SA+BxBC,aA/BwB,GA+BR,MAAM;AAClB,UAAI,KAAKP,KAAL,CAAWE,GAAX,IAAkB,KAAKF,KAAL,CAAWC,GAAjC,EAAsC;AAClC,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,cAAD;AACI,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GADpB;AAEI,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,GAFpB;AAGI,UAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,IAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,CADJ,CADJ;AAaH,OAdD,MAcO;AACH,4BAAQ;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAR;AACH;AACJ,KAjDuB;AAAA;;AAUxBK,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACIC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAEb,MAAAA,GAAG,EAAEY,QAAQ,CAACE,MAAT,CAAgBC,QAAvB;AAAiCd,MAAAA,GAAG,EAAEW,QAAQ,CAACE,MAAT,CAAgBE;AAAtD,KAAd,CADhB;;AAGA,UAAMC,UAAU,GAAG,YAAY;AAC3B;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,0FAAyF,KAAKpB,KAAL,CAAWC,GAAI,QAAO,KAAKD,KAAL,CAAWE,GAAI,yCAAhI,CAAL,CAA+KmB,KAA/K,CAAqLC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAA5L,CAAvB;AACA,YAAMG,OAAO,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAtB,CAH2B,CAI3B;AACA;;AACA,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACK,IAAR,CAAa3B,IAAb,GAAoB,CAApB,GAAwB,CAAxB,GAA4B,MAAvC,CAAhB,CAN2B,CAO3B;;AACA,aAAO,KAAKW,QAAL,CAAc;AAAEX,QAAAA,IAAI,EAAEwB;AAAR,OAAd,CAAP;AACH,KATD;;AAUAT,IAAAA,UAAU;AAEb;;AAyBDa,EAAAA,MAAM,GAAG;AACL;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxB,KAAL,CAAWG,IAAvB;AACA,WAAO,KAAKI,aAAL,EAAP;AACH;;AAvDuB;;AAwD3B;AAED,eAAeR,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport { Row, Col } from 'reactstrap';\nimport WeatherDisplay from '../WeatherDisplay';\n\nclass App extends Component {\n    state = {\n        lat: null,\n        lon: null,\n        temp: null,\n        highTemp: null,\n        lowTemp: null,\n        percip: null\n    }\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({ lat: position.coords.latitude, lon: position.coords.longitude }),\n        );\n        const getWeather = async () => {\n            //Get Weather data from API with coordinates from state\n            const response = await fetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&appid=fdca481f9e858844aede00aa6a7749c2`).catch(err => console.log(err));\n            const weather = await response.json()\n            //Set Current Tempurature\n            // weather.main.temp is the current tempurature in Kelvin, convert it to Farenheit\n            const tempInF = Math.round(weather.main.temp * 9 / 5 - 459.67);\n            //Update the state with current Tempurature in F\n            return this.setState({ temp: tempInF })\n        }\n        getWeather();\n\n    }\n\n\n\n\n    renderContent = () => {\n        if (this.state.lon && this.state.lat) {\n            return (\n                <div>\n                    <Row>\n                        <Col>\n                            <WeatherDisplay\n                                lat={this.state.lat}\n                                lon={this.state.lon}\n                                temp={this.state.temp}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n            )\n        } else {\n            return (<h1 className=\"text-center\">Acquiring Device Coordinates</h1>)\n        }\n    }\n\n    render() {\n        //Why the fuck does this constantly run\n        console.log(this.state.temp)\n        return this.renderContent();\n    }\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
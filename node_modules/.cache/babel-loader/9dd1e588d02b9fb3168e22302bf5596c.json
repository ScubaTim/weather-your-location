{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/weather-your-location/src/components/App/index.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport { Row, Col } from 'reactstrap';\nimport WeatherDisplay from '../WeatherDisplay';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      lon: null,\n      errMessage: ''\n    };\n\n    this.handleClick = () => {\n      console.log('button clicked');\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude,\n      lon: position.coords.longitude\n    }), err => this.setState({\n      errMessage: err.message\n    }));\n  }\n  /*\n  getWeather = async () => {\n      const response = (await fetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=London&appid=fdca481f9e858844aede00aa6a7749c2`).catch(err => console.log(err)));\n      const weather = response.json()\n  }\n  */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(WeatherDisplay, {\n      lat: this.state.lat,\n      lon: this.state.lon,\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/weather-your-location/src/components/App/index.js"],"names":["React","Component","Row","Col","WeatherDisplay","App","state","lat","lon","errMessage","handleClick","console","log","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","err","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBK,KADwB,GAChB;AACJC,MAAAA,GAAG,EAAE,IADD;AAEJC,MAAAA,GAAG,EAAE,IAFD;AAGJC,MAAAA,UAAU,EAAE;AAHR,KADgB;;AAAA,SAoBxBC,WApBwB,GAoBV,MAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,KAtBuB;AAAA;;AAOxBC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACIC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAEZ,MAAAA,GAAG,EAAEW,QAAQ,CAACE,MAAT,CAAgBC,QAAvB;AAAiCb,MAAAA,GAAG,EAAEU,QAAQ,CAACE,MAAT,CAAgBE;AAAtD,KAAd,CADhB,EAEIC,GAAG,IAAI,KAAKJ,QAAL,CAAc;AAAEV,MAAAA,UAAU,EAAEc,GAAG,CAACC;AAAlB,KAAd,CAFX;AAIH;AAED;;;;;;;;AAUAC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AACI,MAAA,GAAG,EAAE,KAAKnB,KAAL,CAAWC,GADpB;AAEI,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,GAFpB;AAGI,MAAA,WAAW,EAAE,KAAKE,WAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CADJ;AAaH;;AAtCuB;;AAuC3B;AAED,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport { Row, Col } from 'reactstrap';\nimport WeatherDisplay from '../WeatherDisplay';\n\nclass App extends Component {\n    state = {\n        lat: null,\n        lon: null,\n        errMessage: ''\n    }\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({ lat: position.coords.latitude, lon: position.coords.longitude }),\n            err => this.setState({ errMessage: err.message })\n        );\n    }\n\n    /*\n    getWeather = async () => {\n        const response = (await fetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=London&appid=fdca481f9e858844aede00aa6a7749c2`).catch(err => console.log(err)));\n        const weather = response.json()\n    }\n    */\n    handleClick = () => {\n        console.log('button clicked');\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col>\n                        <WeatherDisplay\n                            lat={this.state.lat}\n                            lon={this.state.lon}\n                            handleClick={this.handleClick}\n                        />\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
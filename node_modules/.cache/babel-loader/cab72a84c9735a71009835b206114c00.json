{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/weather-your-location/src/components/App/index.js\";\nimport React, { Component } from 'react';\nimport '../../apis/geolocation';\nimport './App.scss';\nimport { Row, Col } from 'reactstrap';\nimport WeatherDisplay from '../WeatherDisplay';\nimport { getLocation } from '../../apis/geolocation/index';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: null\n    };\n  }\n\n  componentDidMount() {\n    getLocation = () => {\n      if ('geolocation' in navigator) {\n        navigator.geolocation.getCurrentPosition(position => {\n          return position;\n        });\n      } else {\n        console.log(\"Geolocation Failed. This usually means access was denied or HTTPS isn't running.\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(WeatherDisplay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/weather-your-location/src/components/App/index.js"],"names":["React","Component","Row","Col","WeatherDisplay","getLocation","App","state","location","componentDidMount","navigator","geolocation","getCurrentPosition","position","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,wBAAP;AACA,OAAO,YAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBM,KADwB,GAChB;AACJC,MAAAA,QAAQ,EAAE;AADN,KADgB;AAAA;;AAKxBC,EAAAA,iBAAiB,GAAG;AAChBJ,IAAAA,WAAW,GAAG,MAAM;AAChB,UAAI,iBAAiBK,SAArB,EAAgC;AAC5BA,QAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACnD,iBAAOA,QAAP;AACH,SAFD;AAGH,OAJD,MAIO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,kFAAZ;AACH;AACJ,KARD;AASH;;AAIDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CADJ;AASH;;AA9BuB;;AA+B3B;AAED,eAAeV,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../../apis/geolocation';\nimport './App.scss';\nimport { Row, Col } from 'reactstrap';\nimport WeatherDisplay from '../WeatherDisplay';\nimport { getLocation } from '../../apis/geolocation/index';\n\nclass App extends Component {\n    state = {\n        location: null\n    }\n\n    componentDidMount() {\n        getLocation = () => {\n            if ('geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    return position;\n                });\n            } else {\n                console.log(\"Geolocation Failed. This usually means access was denied or HTTPS isn't running.\");\n            }\n        }\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <Row>\n                    <Col>\n                        <WeatherDisplay />\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}